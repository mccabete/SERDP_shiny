%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 882.000000 414.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.3 (Build 17D102) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 882 414
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 882 414
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /l put
dup 35 /i put
dup 36 /m put
dup 37 /a put
dup 38 /t put
dup 39 /e put
dup 40 /space put
dup 41 /h put
dup 42 /n put
dup 43 /g put
dup 44 /T put
dup 45 /c put
dup 46 /k put
dup 47 /A put
dup 48 /b put
dup 49 /u put
dup 50 /d put
dup 51 /o put
dup 52 /s put
dup 53 /fi put
dup 54 /r put
dup 55 /parenleft put
dup 56 /F put
dup 57 /parenright put
dup 58 /P put
dup 59 /y put
dup 60 /percent put
dup 61 /v put
dup 62 /B put
dup 63 /w put
dup 64 /comma put
dup 65 /f put
dup 66 /fl put
dup 67 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<



38527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000001004E0000022302CA0009002FBA0007000000032BB8000710B80002D000B800012FBA0000000700032BB8000010BA0006000300032BB80006103031131133112135213521354E5F0148FEB8017602CAFD36014750E3500002004E0000026202CA000800130089B800152FBA0001000900032BB8000110B8001510B80010DCB80005DC410500DA000500EA000500025D411B0009000500190005002900050039000500490005005900050069000500790005008900050099000500A9000500B9000500C90005000D5DB8000110B8000BD000B8000A2FBA0009000100032BB8000910BA0000000C00032BB800001030311311333216151406270111331133163635342623ADBA514B4B51FEE75FDA6C6F6F6C0174010643404044010156FD360124017064646F00000100020000023D02CA00070027BA0003000000032BB800031000B800012FBA0006000700032BB8000610B8000710B80003D030311311331133352115F05FEEFDC5027AFD86027A5050000000020024FFF5020A021100300042015CB800142BBB00380003000D00182BBB002A0003001700182BB8001710B80005D0B800052F4111000600380016003800260038003600380046003800560038006600380076003800085D4105008500380095003800025DB8003810B900200003F4B9001F0003F4B8001710B900300003F4B8001710B80031D0B800312FB8002A10B80044DC00B800014558B800252F1BB9002500083E59B800014558B800022F1BB9000200043E59B800014558B800082F1BB9000800043E59BA000500020025111239B8002510B9001C0002F441050089001C0099001C00025D41110008001C0018001C0028001C0038001C0048001C0058001C0068001C0078001C00085DB8002510B8001FDCB8000210B9002E0002F441110007002E0017002E0027002E0037002E0047002E0057002E0067002E0077002E00085D41050086002E0096002E00025DBA003000020025111239BA003100020025111239B8003DD030312506232226350E0123222E0235343E02373E0335342E0223220607233E0333321E0215111416333237270E0515141E0233323E0235020A16272127235D36233F2E1B1E313F21233F301C152129143648035502243C4D2C2345382207140B0F8A1034393A2E1D111B24142A3C2612020D252A2A25102237272C3823120607070D19181C2212062939304229120A1F382DFEF61E1C05C70C0B0709142520151D12081723291200000000020043FFF5022D02CA0018002C00ADB8002E2FBA0018000000032BB8001810B80002D0B8001810B80004D0B800042FB8002E10B8000EDCB8001810





00>] def
/CharStrings 37 dict dup begin
/.notdef 0 def
/space 1 def
/percent 2 def
/parenleft 3 def
/parenright 4 def
/comma 5 def
/A 6 def
/B 7 def
/C 8 def
/F 9 def
/P 10 def
/T 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/f 17 def
/g 18 def
/h 19 def
/i 20 def
/k 21 def
/l 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/t 29 def
/u 30 def
/v 31 def
/w 32 def
/y 33 def
/fi 34 def
/fl 35 def
/uni2B91 36 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec



EE82C37F605C65162390CA82DEA3A447C462C471EAB2A9487A7EE30325D8AF2AAF64620931A31F9181950BA02F53409DD53F7DA04A729FD4F4EA5E1C32B8B66E07F8FACD10EBC02A4D279C0E8EAF6F05CA65F41B14B60DF916E1005B5F9F4DAFD170336D661B53855FFEA94844449329B016766171837642ED4F241BCD02BF415A0B1A8C47E9B843F130132758E560B7A8E0EA5DD5804BD592909646430EA77A7F3B56706D4F606864D8103D4853693920A1FACBF273A6834AFD645C595DD6948FAFAA7A1C4B1CFC6BE6413C69E6CA107F2EDB962BD7EACE200AA61E99D3C1113E352D00997B34AC2B912C75B91BA6ED7C48C58E7B6C453195713A372297E80E97454BA19F603AD2FF5B6E5158120AAE9290051090CCD119D6776FCE0DC9ECBF67B73F51C2E27D8EF7885BFD536927B05F4F3DE7FD6A2E7298092160D49E3C29C0EAD4485D737AA9D0CD3EE0720433C07E968E689C5C04852BB429256435FF6722652E15EB070500C47D85B8C502C8B25BFED715A5CD0C77B9C99D0A6D1B3BB7DE09D09529CA7FB0CD39FD28710EEDAC8588B6590F07704BBEBBB966D1BCE8FD4EC8C350717183010A081686C937CC60131C369BA318990051073FBBB9F3A0318848E364B3397FE78CA8D7FF65D880F4ED32B246C34612EDFC14810B2EAA07C3C94E0C648F38E6E5412AD3591A0A03D32315033BE7AB740B6B665D2201BA524130275631C29673C0AB875B009B48E7906FF3292BC22B534B04ADFA0BE508B58C767E352E7BDF41448BE7F635B03495C6548970397DA6B457255C54A216D08AEB73EED6E78881DD196B476A8E9E4BAD1B8A68AD24D84E1A5E56850E34C000E8BC71854BCA5E0FFAE0F9341970F039079C2280A0372A9461BD6B2A11E7243AFFEB305B8E49A67796EE388F8FED9884EBDF7B152EBEA23F5D3978BFE3ED8EAE7B43A64C71705F60C752B5AFCFFC1DF1A784F931D88406E558289D72DF0A0839201BED688F3B311798757EAECE81E8CE08FEAF0CF98DA9D6168F535BC7F3748B375A99589203A1DE93D13C63D2071B905352513ACFDD0FF750AA4643FCC47527B130B3C05FBCFED1EE17E3B72EFA773A81EA72EC436A794FEF18C5E4F7F03030DE4C9C89ACDA38336D19BF467FBC21ED09F018073880A232CCD03B5B088B3325D90D932A6FBDF4631B2E39BB98A7F4ADA47EFF6956A363D1BE9C335FAEA75D0B5158243FA9652D8BF08C674DACBDFE88909C0EFD7E1627E591E2768E64706A4F855810F9379EAC9FA235E91D635668B76FEC6011B5EF0109F644221008731214C21A9B15317373A32E640CC7044B600F60026295F7D514A4E433BFF6CACC47A83D824EDAB1C26347134B73F776A107D539CFBF24CA3ACBD6FF7EEE514F00A782BA8380F522D080A9EC6FD71F5E4950A3D960CD40036D0E2E2E64495021260E0A4B7E
28CFD16DDFD9207DAC070025F2B1A286D83CE717ACD38632E57A8BB863BD2B76954B145FB9D763753E97CE74472FEF9C9DF4EB8A8EC7BD08347561ED5303749B97F1175CCBE9246C69F0A9D8ADF2B9F9F27D0FD8DA2B9DBE740532BDE30F00C92CBA2185CC431FB916B6AC6B8AC894BBE965CB2474157C0F6AC75B19A8B8B0E95D796E54EB8958D38DE8C848F9C7FC48EAB78BC9FCA8846999E931D1B221E8B7238CEFC38DEB0C82B9757F0A06A15A70EA701FF6594BA4E0BD79E29AD3D6CB5516C3FE3569FDB1B7D59A254667CD61D83E16B161E2E0472680FD5A5C78C6CDBA79B111F614E1C7342A0565350A2B28D39803BBA7627ACC19F589C9E665F7E00C7F37E7DD353409D281E8349F18528818A51785D6BE34CB0068503D59B1631E3CF54FCDC630652D65D0D64C4B35D44B8587C341A8D5168225C0F21A2078A9842EF57A6F27E77F293153731F8EC11A3C4A2CD15AD180067BACB4CA459EC3EB09CA00997BAB08027F4212DD72189718718143ABD3113D2787BD04ECCA51F59407540A2DD56FC1FF36C78280675516061FCA01B8DFBA6B14AE94AAD35BE6489E90DC6C6D449150CF50C5093C0ADACFB56CD8CECC8248868D1D3CE46980D243152F52C8A4DDC9E90DC2DA7210D71C7B5D80718B08DD82F828AAF827E2B0425F74D550EAE10E2D8E5BF092B4D6991122072E10A90744A3160EE3EA1EF1B39EA9AB7B65F555DA0EAA1ADDD6C5C5A3AFC3739252E6F26D1936F3603E3D853626F7BD85BB9B5188EC080596C5406F24604DA198B85769CD4204F1CE2B4025E1EE5AD016DE815F587FE3D6EB3C616553D89623C018DD02FF268417B5A4440AD342FCFD985CC927900DE0D949705E2BA03EC320FE79E42CC3AD3B4479FD3E278F8FD5935D794160FE58B11054A9D80D5DC3C7072067D3A42C101CB76A15BB016011C0DF8EADC566B3E2801B483DD7E59A147D0D6BD1480F20DFB78EBDDDFEFA3968B1FEAA1C44C01380564CE7DE44C43C59692B2EC4E15B3B1BA9593B30D19BF908D7F1BD673301948E60633BC28E2E139F84CA049A9453432B1D28C6EFFC6E8FCAF47E79E82D371056CBD848048C227F3CF4528651112BDD6FBB103A82360A7CA856CABA4990D197388110BB31E7C921A75A9E753E483956885708E6CFE98BFB78AD07E9B21207FD31C03F9CB5CD87DC922C503F383BCCA6BEB740A418E696A4CA38CF25420405CA503997A5D058FB6EB3BE5151C4AEE4C1DD457D776D983A80AA0CB7044DF7CD7DE03C1E440516859552C6C4D59EC61BD7348138B5659F82274783BE993E044765F5A67946D340854355F03411CD7C4396BF2BF05DE9C6984A0B37BFEB122F456B9FE26E4816BD95E58B3D1BE7C98E6AD6A3A24F73D9561E2D3D21B855E55391A6D77DCE29330B1CFC2F568DD7F6401F30DE47789BC6DD2613A622D74B76
BA2674615F37E66507C8BB8EA6D3737FA1913C04D7F9C1CCA9EAFFF2EA7E0C0A5648FE178278A62D99A824A9C23092F52FC5F2FBC2062890D0FEC71C6381229CE298E8D98A3257018B86B4BD77A905D7673E794F355EBD9F38849BCA5235457E6A6B60E45E29526514EB133ABA5857544A92D75456CF6940DF1CAC5E4D665747B45ADDF42D0460F619D970A265D99F4ABCAD59644E30F31491F51A438F1775FFDF052D24797E547CDDC02CFA42F71214957E7E85FA5F39271013CC1FE54B5403D39C515A9DBF333FF0265E38403801B5E236820BCE05D2451F86D93F417558CA2EA0D686B429A706AFE70A182DDE8261145E8046DDBF1EFB1B3513C37BD745B2E3C792E2F24A3051DD1B3F210656437AF8BF8344250091D8FA11AABE37117E9B0B81B8A790612E704E0A2FDCD434F07F9001C44C7468F4C792830AC96AED20A5D3E39C019D09457626C71544F02FBD192C6E743AF41675181AA6805A5D6D06E084BE89C530F24C9EE3D6ACA991BD00A17A4E81AF256EF42532082A1D37FDFEC35D229EB79046FF41AE8DDA61073A3F42D7BBC55363CC5ADE698D6335A0CFF55E5DC2EE34C47063C8AF2B7B4FFD494F22892D8F11DDEF5632207636D206F59E0AE8341136BCF13D34609FB0453D21BCCBD4677E72147D7703D20B34A7B4655FDFCF53E5E21FFE80864084E4F91027851CB6776A6CDAF33FACFD452605B82DC3385B65E010A3119E1254738DEADE86DDF241D81BD9CBECFC149214782F503160005C81DEAC6D00F1D3C13FC246D78D4DB018C2D6347FD01C04754F87415B3C842B1DDB83E38DBED618D1B9B76204C83DEB38CCDC1D99B3F7D05D62D30CC68A3A1CA981A19DB81BBF3B2DC0D8353E524C00DFE0B2A9B80047848E2FDCCFE7B82B7175FAE757C6F42F60D836A6955DCE9A9738CD50CA500F4238FB7416C32158A26412DF75697A5925773AC8352F5485991522A2C527B0E07C76FE70AE3ECBE4FD79AB6787F1C3EE6E797F373FD9B1676178CD8C24523ABC796B15DBE43338F26BB47DCD4CC308888B86DA7DE2ED7D552EA08A72CEE332344C5CCBDB2A86992CA073728D0764EE9A8A776BB49E1F6C28B23C40F20B59E8D6C883A9E798C58FF86F3E85604B5E7E214A58DDDB185D53B055646FE3121D21DCC3950E5F2547806DF7BBE80986E40917F5A06BF754A2B634CD6C9D12AEBEE851C786E0B7CF0920F879930E215330299C619897FE7A5CBBF61E1B5FF5DFAD363198658D4A3371CAAE1B55893B89C3125B0C275DB0A7660FEC51B3F731382F3C3939C7429CB32EA979483D81DEE425BEBDBA4D8EB140FE3E6206D2059727B184A4B88CA2320DA7F57C94DFDE2941FFAF35102C598DA8B2D9F57AA83315926EF346471026093095B54029840908EF7BC2F5C1FB33179941CA51C3AED8A2524428F8E22FEDB1CCFEC8EFD6CB
68BF0BD41C3DC99980F2B632D8A06972DEFCA908C55552F2A3F65ACFA73D1E697568EA65DC7192678E701720FCF1FE87292A453FEB22C38BF872FB15310705ECBD2F72F938D776F8125ED9C81F89142B35994C2F323D848D4FBBA019E3139054E0119405211CD7A0D922D9BA8EA83E72F21E34AB8383C6628A4B182AA12722AE4460AE284C04A201C6FAB7BBF77D653400CFCCFC02B022EF7CDC833A0330F8FA1101D2FBD121B4D857D39E847BD369B87D09D5CD6ADF7324F304578C1D71D299BFC5EA0F0EB5C7C1108FA61608010D21045C87D24D966670C36FFC3B788F38CF508289A9AD835D9FA02BBB67F506D1B80827AB9B8EF19EBB3529631CC3010ECF4D457AF096C204896C78081CA300E8FAA44A1DFA18E6F646122C5D978E4C192CB40716A6EDE2498715AAE6667E68C94AC6BFC6555115552F1E31EC0C495E9939B68448AA1C92A8E236FB59063E78AD96D4805640905BE45A30289A1E3DE122FBA85947BE3DA9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 882 414 rc
-44 650 m
991 650 l
991 -279 l
-44 -279 l
h
-44 650 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
310.87305 532.1825 m
417.42093 444.59158 l
S
0 i
CM
379.60077 210.48874 m
371.51581 207.72586 l
375.32605 203.09099 l
h
379.60077 210.48874 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
423.60077 439.51126 m
415.51581 442.27414 l
419.32605 446.90903 l
h
423.60077 439.51126 m
S
1 J
1 j
0.60000002 i
348.45587 534.43445 m
614.76776 434.05832 l
S
0 i
CM
578.25366 218.76321 m
569.70966 218.7489 l
571.82581 213.13446 l
h
578.25366 218.76321 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
622.25366 431.23679 m
613.70966 431.2511 l
615.82581 436.86554 l
h
622.25366 431.23679 m
S
1 J
1 j
0.60000002 i
139.30812 438.33948 m
233.49725 525.44135 l
S
0 i
CM
195.37077 119.12712 m
191.53409 126.76125 l
187.46042 122.35611 l
h
195.37077 119.12712 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
239.37077 530.87286 m
235.53409 523.23877 l
231.46042 527.64386 l
h
239.37077 530.87286 m
S
1 J
1 j
0.60000002 i
142.77522 377.67935 m
230.12286 304.66977 l
S
0 i
CM
192.26103 350.46082 m
184.1989 347.63205 l
188.04684 343.02841 l
h
192.26103 350.46082 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
236.26103 299.53918 m
228.1989 302.36795 l
232.04684 306.97159 l
h
236.26103 299.53918 m
S
1 1 1 sc
CM
2.5 272 m
122.5 272 l
122.5 212 l
2.5 212 l
h
2.5 272 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
46.5 378 m
166.5 378 l
166.5 438 l
46.5 438 l
h
46.5 378 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 62.5 242 cm
/F1.1[ 16 0 0 -16 0 0]sf
-27.264 -3.447998 m
(!"#$%&'\()[ 11.552000 3.552000 3.552000 13.648000 8.592000 5.040000 8.592000 0.000000 ] xS
-27.856001 15 m
(!\)%*+')[ 11.552000 8.896000 8.592000 8.896000 9.184000 0.000000 ] xS
/Cs1 SC
0.227451 0.55686301 0.92941201 sc
CM
580.5 272 m
700.5 272 l
700.5 212 l
580.5 212 l
h
580.5 272 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
624.5 378 m
744.5 378 l
744.5 438 l
624.5 438 l
h
624.5 378 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 640.5 242 cm
-14.816 -3.447998 m
(,#-.\()[ 9.184000 3.552000 8.592000 8.304000 0.000000 ] xS
-40.903999 15 m
(/01*2%*-')[ 10.368000 9.488000 8.896000 8.896000 9.488000 8.592000 8.896000 8.592000 0.000000 ] xS
/Cs1 SC
0.227451 0.55686301 0.92941201 sc
CM
360.5 272 m
480.5 272 l
480.5 212 l
360.5 212 l
h
360.5 272 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
404.5 378 m
524.5 378 l
524.5 438 l
404.5 438 l
h
404.5 378 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 420.5 242 cm
-32.599998 -3.447998 m
(,#-.\(\)34&\()[ 9.184000 3.552000 8.592000 8.304000 4.448000 8.896000 9.184000 8.000000 5.040000 0.000000 ] xS
-40.903999 15 m
(/01*2%*-')[ 10.368000 9.488000 8.896000 8.896000 9.488000 8.592000 8.896000 8.592000 0.000000 ] xS
/Cs1 SC
0.227451 0.55686301 0.92941201 sc
CM
156 412 m
303.98801 412 l
303.98801 352 l
156 352 l
h
156 412 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
200 238 m
347.98801 238 l
347.98801 298 l
200 298 l
h
200 238 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 229.994 382 cm
-51.855999 -3.447998 m
(,#$'\(4#*-'\(56')[ 9.184000 3.552000 13.648000 8.592000 4.448000 8.000000 3.552000 8.896000 8.592000 8.592000 4.448000 8.288000 5.328000 0.000000 ] xS
-66.536003 15 m
(78#6'\($%*%+'$'*&9)[ 4.144000 9.184000 3.552000 5.328000 8.592000 4.448000 13.648000 8.592000 8.896000 8.592000 9.184000 8.592000 13.648000 8.592000 8.896000 5.040000 0.000000 ] xS
/Cs1 SC
0.227451 0.55686301 0.92941201 sc
CM
156 117.5 m
303.98801 117.5 l
303.98801 57.5 l
156 57.5 l
h
156 117.5 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
200 532.5 m
347.98801 532.5 l
347.98801 592.5 l
200 592.5 l
h
200 532.5 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 229.994 87.5 cm
-60.175999 -3.447998 m
(:"%*&\(-3$$1*#&;)[ 10.368000 3.552000 8.592000 8.896000 5.040000 4.448000 8.592000 9.184000 13.648000 13.648000 8.896000 8.896000 3.552000 5.040000 0.000000 ] xS
-34.216 15 m
(7<\(-3='69)[ 4.144000 16.000000 4.448000 8.592000 9.184000 8.000000 8.592000 5.328000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -44 650 cm
347.98801 293.23511 m
615.12994 384.34186 l
S
0 i
CM
578.70172 263.07584 m
572.09827 268.49756 l
570.16156 262.81873 l
h
578.70172 263.07584 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
622.70172 386.92416 m
616.09827 381.50244 l
614.16156 387.18127 l
h
622.70172 386.92416 m
S
1 J
1 j
0.60000002 i
314.81671 298 m
415.69977 372.13745 l
S
0 i
CM
378.14624 273.12512 m
373.47632 280.27997 l
369.92325 275.44513 l
h
378.14624 273.12512 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
422.14624 376.87488 m
417.47632 369.72003 l
413.92325 374.55487 l
h
422.14624 376.87488 m
S
1 J
1 j
0.60000002 i
273.99399 298 m
273.99399 522.59998 l
S
0 i
CM
229.994 119.4 m
232.994 127.4 l
226.994 127.4 l
h
229.994 119.4 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
273.99399 530.59998 m
276.99399 522.59998 l
270.99399 522.59998 l
h
273.99399 530.59998 m
S
1 1 1 sc
CM
759.5 272 m
879.5 272 l
879.5 212 l
759.5 212 l
h
759.5 272 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -44 650 cm
803.5 378 m
923.5 378 l
923.5 438 l
803.5 438 l
h
803.5 378 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 819.5 242 cm
-34.375999 -3.447998 m
(:%&\)3+'*\()[ 10.368000 8.592000 5.040000 8.896000 9.184000 9.184000 8.592000 8.896000 0.000000 ] xS
-39.551998 15 m
(:6'=%"'*-')[ 10.368000 5.328000 8.592000 8.000000 8.592000 3.552000 8.592000 8.896000 8.592000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -44 650 cm
524.5 408 m
614.59998 408 l
S
0 i
CM
578.59998 242 m
570.59998 245 l
570.59998 239 l
h
578.59998 242 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
622.59998 408 m
614.59998 405 l
614.59998 411 l
h
622.59998 408 m
S
1 J
1 j
0.60000002 i
744.5 408 m
793.59998 408 l
S
0 i
CM
757.59998 242 m
749.59998 245 l
749.59998 239 l
h
757.59998 242 m
f
0 J
0 j
1 0 0 -1 -44 650 cm
801.59998 408 m
793.59998 405 l
793.59998 411 l
h
801.59998 408 m
S
/Cs2 SC
0 sc
1 0 0 -1 377.5 24 cm
-294.28799 -3.447998 m
(>"1'\(%6'\(&\)#*+4\(?'\(%6'\(2#6'-&";\($'%416#*+\(#*\(&\)'\(5'"2@\(&\)'6'A36'\(-%*\(0'\(#$$'2#%&'";\()[ 10.960000 3.552000 8.896000 8.592000 4.448000 8.592000 5.040000 8.592000 4.448000 5.040000 8.896000 3.552000 8.896000 9.184000 8.000000 4.448000 12.128000 8.592000 4.448000 8.592000 5.040000 8.592000 4.448000 9.488000 3.552000 5.040000 8.592000 8.592000 5.040000 3.552000 8.000000 4.448000 13.648000 8.592000 8.592000 8.000000 8.896000 5.328000 3.552000 8.896000 9.184000 4.448000 3.552000 8.896000 4.448000 5.040000 8.896000 8.592000 4.448000 8.288000 8.592000 3.552000 9.488000 4.448000 4.448000 5.040000 8.896000 8.592000 5.040000 8.592000 4.736000 9.184000 5.040000 8.592000 4.448000 8.592000 8.592000 8.896000 4.448000 9.488000 8.592000 4.448000 3.552000 13.648000 13.648000 8.592000 9.488000 3.552000 8.592000 5.040000 8.592000 3.552000 8.000000 0.000000 ] xS
-122.552 15 m
(#*B1'*-'2\(0;\(316\(4%$C"#*+\(2'4#+*)[ 3.552000 8.896000 8.288000 8.896000 8.592000 8.896000 8.592000 8.592000 9.488000 4.448000 9.488000 8.000000 4.448000 9.184000 8.896000 5.328000 4.448000 8.000000 8.592000 13.648000 9.488000 3.552000 3.552000 8.896000 9.184000 4.448000 9.488000 8.592000 8.000000 3.552000 9.184000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
